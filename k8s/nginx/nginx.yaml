---
kind: Service
apiVersion: v1
metadata:
  name: nginx
  namespace: schlep
  labels:
    app: nginx
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - name: grpc
      appProtocol: kubernetes.io/h2c
      protocol: TCP
      port: 8080
      targetPort: 8080
...
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-v1-19
  namespace: schlep
  labels:
    app: nginx
    nginx/version: v1.19
spec:
  type: LoadBalancer
  selector:
    app: nginx
    nginx/version: v1.19
  ports:
    - name: grpc
      appProtocol: kubernetes.io/h2c
      protocol: TCP
      port: 8080
      targetPort: 8080
...
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-v1-25
  namespace: schlep
  labels:
    app: nginx
    nginx/version: v1.25
spec:
  type: LoadBalancer
  selector:
    app: nginx
    nginx/version: v1.25
  ports:
    - name: grpc
      appProtocol: kubernetes.io/h2c
      protocol: TCP
      port: 8080
      targetPort: 8080
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-v1-19
  namespace: schlep
  labels:
    app: nginx
    nginx/version: v1.19
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      nginx/version: v1.19
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/skip-inbound-ports: "8080"
        # config.linkerd.io/proxy-log-level: >-
        #   h2::proto::streams::prioritize=trace,linkerd=debug,info
        config.linkerd.io/proxy-log-format: json
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "4191"
      labels:
        app: nginx
        nginx/version: v1.19
    spec:
      containers:
        - name: nginx
          image: nginx:1.19.10
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config
          configMap:
            name: nginx
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-v1-25
  namespace: schlep
  labels:
    app: nginx
    nginx/version: v1.25
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      nginx/version: v1.25
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/skip-inbound-ports: "8080"
        # config.linkerd.io/proxy-log-level: >-
        #   h2::proto::streams::prioritize=trace,linkerd=debug,info
        config.linkerd.io/proxy-log-format: json
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "4191"
      labels:
        app: nginx
        nginx/version: v1.25
    spec:
      containers:
        - name: nginx
          image: nginx:1.25.5
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config
          configMap:
            name: nginx
...
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: schlep
data:
  nginx.conf: |
    events {
        multi_accept on;
        worker_connections 16384;
        use epoll;
    }

    http {
        aio threads;
        aio_write on;

        tcp_nopush on;
        tcp_nodelay on;

        log_subrequest on;

        reset_timedout_connection on;

        keepalive_timeout 75s;
        keepalive_requests 100;

        # client_body_temp_path /tmp/nginx/client-body;
        # fastcgi_temp_path /tmp/nginx/fastcgi-temp;
        # proxy_temp_path /tmp/nginx/proxy-temp;

        client_header_buffer_size 1k;
        client_header_timeout 60s;
        large_client_header_buffers 4 8k;
        client_body_buffer_size 8k;
        client_body_timeout 60s;

        http2_max_field_size 4k;
        http2_max_header_size 16k;
        http2_max_requests 1000;
        http2_max_concurrent_streams 128;

        types_hash_max_size 2048;
        server_names_hash_max_size 1024;
        server_names_hash_bucket_size 128;
        map_hash_bucket_size 64;

        proxy_headers_hash_max_size 512;
        proxy_headers_hash_bucket_size 64;

        variables_hash_bucket_size 256;
        variables_hash_max_size 2048;

        underscores_in_headers off;
        ignore_invalid_headers on;

        limit_req_status 503;
        limit_conn_status 503;

        # Custom headers for response

        server_tokens off;

        # disable warnings
        uninitialized_variable_warn off;

        log_format upstreaminfo
            '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status';
        map $request_uri $loggable {

            default 1;
        }

        access_log /var/log/nginx/access.log upstreaminfo if=$loggable;

        error_log /var/log/nginx/error.log notice;

        server_name_in_redirect off;
        port_in_redirect off;

        resolver 10.43.0.10 valid=30s;

        upstream backend_service {
            server backend.schlep.svc.cluster.local:8080;
        }

        server {
            server_name _;

            listen 8080 http2;

            set $proxy_upstream_name "schlep";

            location / {
                set $namespace "schlep";
                set $location_path "/";
                set $global_rate_limit_exceeding n;

                port_in_redirect off;

                client_max_body_size 100m;

                proxy_next_upstream error timeout;
                proxy_next_upstream_timeout 0;
                proxy_next_upstream_tries 3;

                proxy_hide_header l5d-remote-ip;
                proxy_hide_header l5d-server-id;

                proxy_connect_timeout 5s;
                proxy_send_timeout 3600s;
                proxy_read_timeout 3600s;

                proxy_buffering off;
                proxy_buffer_size 4k;
                proxy_buffers 4 4k;

                proxy_max_temp_file_size 1024m;

                proxy_request_buffering on;
                proxy_http_version 1.1;

                proxy_cookie_domain off;
                proxy_cookie_path off;

                # Grpc settings
                grpc_connect_timeout 5s;
                grpc_send_timeout 3600s;
                grpc_read_timeout 3600s;
                client_body_timeout 3600s;

                grpc_pass grpc://backend_service;

                proxy_redirect off;
            }
        }
        ## end server

        # default server, used for NGINX healthcheck and access to nginx stats
        server {
            listen 127.0.0.1:10246;
            set $proxy_upstream_name "internal";

            keepalive_timeout 0;
            gzip off;

            access_log off;

            location /healthz {
                return 200;
            }

            location /nginx_status {
                stub_status on;
            }
        }
    }
...
